# ---------------------------------------------------------------------------
# //
#
# Air Force Research Laboratory (AFRL) Autonomous Capabilities Team (ACT3)
# Reinforcement Learning (RL) Core contributed by the:
#  -  () Team
#  - Safe Autonomy (SA) Team
#
# This is a US Government Work not subject to copyright protection in the US.
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ---------------------------------------------------------------------------

"agent": "corl.agents.base_agent.TrainableBaseAgent"
"config": {
    "frame_rate": 1,  # Hz
    "parts": [
        # {"part": "Controller_RollRate", "config": {"axis": 0}},
        {
          "part": "RateController", 
          "config": {
            "name": "RollRate", 
            "axis": 0, 
            "property_class": "saferl.platforms.dubins.dubins_properties.RollRateProp", 
            properties: {name: "roll_rate"}
          }
        },
        # {"part": "Controller_PitchRate", "config": {"axis": 1}},
        {
          "part": "RateController", 
          "config": {
            "name": "PitchRate", 
            "axis": 1, 
            "property_class": "saferl.platforms.dubins.dubins_properties.PitchRateProp", 
            properties: {name: "pitch_rate"}
          }
        },
        # {"part": "Controller_Acceleration", "config": {"axis": 2}},
        {
          "part": "RateController", 
          "config": {
            "name": "Acceleration", 
            "axis": 2, 
            "property_class": "saferl.platforms.dubins.dubins_properties.AccelerationProp", 
            properties: {name: "acceleration"}
          }
        },
        {"part": "Sensor_Relative_Position", "config": {"oriented": True}},
        {"part": "Sensor_Relative_Rejoin_Position", "config": {"oriented": True, "offset": [-500, -500, 0]}},
        {"part": "Sensor_Velocity", "config": {"oriented": True}},
        {"part": "Sensor_Partner_Velocity", "config": {"oriented": True}},
        {"part": "Sensor_Flight_Path_Angle"},
        {"part": "Sensor_Roll"},
    ],
    "episode_parameter_provider": {
      "type": "corl.episode_parameter_providers.simple.SimpleParameterProvider"
    },
    "simulator_reset_parameters": {
      "x": {
        "type": "corl.libraries.parameters.UniformParameter",
        "config": {
          "name": "x",
          "units": "meters",
          "low": 0,
          "high": 2000,
        },
      },
      "y": {
        "type": "corl.libraries.parameters.UniformParameter",
        "config": {
          "name": "y",
          "units": "meters",
          "low": -1000,
          "high": 1000,
        },
      },
      "z": {
        "type": "corl.libraries.parameters.UniformParameter",
        "config": {
          "name": "z",
          "units": "meters",
          "low": 10000,
          "high": 10000,
        },
      },
      "heading": 0,
      "v": 200,
      "gamma": 0,
      "roll": 0
    },
    "glues": [
        {
            "functor": "corl.glues.common.controller_glue.ControllerGlue",
            "config": {
                "controller": "Acceleration",
            },
        },
        {
            "functor": "corl.glues.common.controller_glue.ControllerGlue",
            "config":{
                "controller": "PitchRate",
            }
        },
        {
            "functor": "corl.glues.common.controller_glue.ControllerGlue",
            "config":{
                "controller": "RollRate",
            }
        },
        {
          "functor": "corl.glues.common.magnitude.MagnitudeGlue",
          "config": {
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 1000.0,
              },
            },
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Relative_Position,
              },
          },
        },
        {
          "functor": "corl.glues.common.unit_vector_glue.UnitVectorGlue",
          "config": {
            "normalization": {
              "config": {
                "mu": 0.0,
                "sigma": [1, 1, 1],
              }
            }
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Relative_Position,
              },
          },
        },
        {
          "functor": "corl.glues.common.magnitude.MagnitudeGlue",
          "config": {
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 1000.0,
              },
            },
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Relative_Rejoin_Position,
              },
          },
        },
        {
          "functor": "corl.glues.common.unit_vector_glue.UnitVectorGlue",
          "config": {
            "normalization": {
              "config": {
                "mu": 0.0,
                "sigma": [1, 1, 1],
              }
            }
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Relative_Rejoin_Position,
              },
          },
        },
        {
          "functor": "corl.glues.common.magnitude.MagnitudeGlue",
          "config": {
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 400.0,
              },
            },
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Velocity,
              },
          },
        },
        {
          "functor": "corl.glues.common.unit_vector_glue.UnitVectorGlue",
          "config": {
            "sensor": "Sensor_Velocity",
            "normalization": {
              "config": {
                "mu": 0.0,
                "sigma": [1, 1, 1],
              }
            }
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Velocity,
              },
          },
        },
        {
          "functor": "corl.glues.common.magnitude.MagnitudeGlue",
          "config": {
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 400.0,
              },
            },
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Partner_Velocity,
              },
          },
        },
        {
          "functor": "corl.glues.common.unit_vector_glue.UnitVectorGlue",
          "config": {
            "sensor": "Sensor_Partner_Velocity",
            "normalization": {
              "config": {
                "mu": 0.0,
                "sigma": [1, 1, 1],
              }
            }
          },
          "wrapped": {
              "functor": "corl.glues.common.observe_sensor.ObserveSensor",
              "config":{
                  "sensor": Sensor_Partner_Velocity,
              },
          },
        },
        {
          "functor": "corl.glues.common.observe_sensor.ObserveSensor",
          "config": {
            "sensor": "Sensor_Roll",
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 1.04719755,  # pi/3
              }
            }
          },
        },
        {
          "functor": "corl.glues.common.observe_sensor.ObserveSensor",
          "config": {
            "sensor": "Sensor_Flight_Path_Angle",
            "normalization": {
              "normalizer": "corl.libraries.normalization.StandardNormalNormalizer",
              "config": {
                "mu": 0.0,
                "sigma": 0.34906585039,  # pi/9
              }
            }
          },
        },
    ],
    "dones": [
        {
            "functor": "saferl.dones.common_dones.TimeoutDoneFunction",
            "config":{},
            "references":{
              "max_sim_time": "max_sim_time",
            },
        },
        {
            "functor": "saferl.dones.rejoin_dones.MaxDistanceDoneFunction",
            "config":{},
            "references": {
              "lead": "lead",
              "max_distance": "max_distance",
            }
        },
        {
            "functor": "saferl.dones.rejoin_dones.CrashDoneFunction",
            "config":{},
            "references": {
              "lead": "lead",
              "safety_margin": "safety_margin",
            }
        },
        {
            "functor": "saferl.dones.rejoin_dones.RejoinSuccessDone",
            "config":{},
            "references": {
              "lead": "lead",
              "offset": "offset_0",
              "radius": "radius",
              "step_size": "step_size",
              "success_time": "success_time"
            }
        },
    ],
    "rewards": [
        {
            "name": "RejoinDistanceExponentialChangeReward",
            "functor": "saferl.rewards.rejoin_rewards.RejoinDistanceExponentialChangeReward",
            "config": {
                "pivot": 5000.0,
            },
            "references": {
              "lead": "lead",
              "offset": "offset_0",
            }
        },
        {
            "name": "RejoinReward",
            "functor": "saferl.rewards.rejoin_rewards.RejoinReward",
            "config": {
                "reward": 0.1,
                "refund": True,
            },
            "references": {
              "lead": "lead",
              "offset": "offset_0",
              "radius": "radius",
            }
        },
        {
            "name": "RejoinFirstTimeReward",
            "functor": "saferl.rewards.rejoin_rewards.RejoinFirstTimeReward",
            "config": {
                "reward": 0.25,
            },
            "references": {
              "lead": "lead",
              "offset": "offset_0",
              "radius": "radius",
            }
        },
        {
            "name": "RejoinSuccessReward",
            "functor": "saferl.rewards.rejoin_rewards.RejoinSuccessReward",
            "config": {
                "reward": 1,
            },
            "references": {
              "lead": "lead",
              "offset": "offset_0",
              "radius": "radius",
              "step_size": "step_size",
              "success_time": "success_time"
            }
        },
        {
            "name": "RejoinFailureReward",
            "functor": "saferl.rewards.rejoin_rewards.RejoinFailureReward",
            "config": {
                "crash_reward": -1,
                "distance_reward": -1,
                "timeout_reward": -1,
                "leave_rejoin_reward": 0,
            },
            "references": {
              "safety_margin": "safety_margin",
              "max_distance": "max_distance",
              "lead": "lead",
              "offset": "offset_0",
              "radius": "radius",
              "max_time": "max_sim_time",
            }
        },
    ],
    "reference_store": !include ../parameters/parameters.yml
}